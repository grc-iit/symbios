cmake_minimum_required(VERSION 3.10)
set(INSTALL_DIR $ENV{INSTALL_DIR})
include_directories(${INSTALL_DIR}/include/)
set(CMAKE_CXX_STANDARD 17)

set(IRIS_LIBS -L${INSTALL_DIR}/lib64 -L${INSTALL_DIR}/lib -L${INSTALL_DIR}/lib -lopenblas  -ldlib -lgfortran -lm -lquadmath -lpthread -lm -lmpi -lhiredis -lbasket -lrpc -lredis++ -lmongoc-1.0 -lbson-1.0 -lbsoncxx -lboost_system -lboost_filesystem  -lmongocxx -lpthread -ldl)
set(LIBS -lmpi)
include_directories(${CMAKE_SOURCE_DIR})
set(CTEST_ENVIRONMENT "LD_LIBRARY_PATH=${CMAKE_BINARY_DIR}/")
set($ENV{LD_PRELOAD} "$ENV{LD_PRELOAD} ${CMAKE_BINARY_DIR}")

set(test_files client)
foreach (test_file ${test_files})
    set(exec unit_${test_file})
    add_executable(${exec} ${test_file}/test.cpp)
    add_dependencies(${exec} symbios)
    target_include_directories(${exec} PRIVATE "${CMAKE_BINARY_DIR}/")
    target_link_libraries(${exec} ${LIBS})
    target_link_libraries(${exec} symbios)
    #set_target_properties(${exec} PROPERTIES FOLDER test/unit)
    set(test_parameters )
    set(test_name ${test_file}_tests)
    add_test(NAME ${test_name} COMMAND ${CMAKE_SOURCE_DIR}/test/unit/${test_files}/test.sh ${test_parameters})
    set_tests_properties(${test_name} PROPERTIES WILL_FAIL false)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "LD_PRELOAD=${CMAKE_BINARY_DIR}/ares/datasets/libdatasets.so")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=$ENV{HDF5_PLUGIN_PATH}")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "RUN_DIR=$ENV{RUN_DIR}")
endforeach ()

set(test_files  data_placement
                dynamic_provisioner
                io_clients
                metadata_orchestrator
                server
                config_manager
                posix)
foreach (test_file ${test_files})
    set(exec unit_${test_file})
    add_executable(${exec} ${test_file}/test.cpp)
    add_dependencies(${exec} symbios)
    add_dependencies(${exec} symbios_server_lib)
    target_link_libraries(${exec} symbios_server_lib)
    target_include_directories(${exec} PRIVATE "${CMAKE_BINARY_DIR}/")
    target_link_libraries(${exec} ${LIBS})
    target_link_libraries(${exec} symbios)
    #set_target_properties(${exec} PROPERTIES FOLDER test/unit)
    set(test_parameters )
    set(test_name ${test_file}_test)
    add_test(NAME ${test_name} COMMAND ${CMAKE_BINARY_DIR}/test/unit/${exec} ${test_parameters})
    set_tests_properties(${test_name} PROPERTIES WILL_FAIL false)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "LD_PRELOAD=${CMAKE_BINARY_DIR}/ares/datasets/libdatasets.so")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=$ENV{HDF5_PLUGIN_PATH}")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "RUN_DIR=$ENV{RUN_DIR}")
endforeach ()


set(test_files  file_io
                redis_io
                mongo_io)
foreach (test_file ${test_files})
    set(exec unit_${test_file})
    add_executable(${exec} io_clients/${test_file}/test.cpp)
    add_dependencies(${exec} symbios)
    add_dependencies(${exec} symbios_server_lib)
    target_link_libraries(${exec} symbios_server_lib)
    target_include_directories(${exec} PRIVATE "${CMAKE_BINARY_DIR}/")
    target_link_libraries(${exec} ${LIBS})
    target_link_libraries(${exec} symbios)
    set(test_parameters )
    set(test_name ${test_file}_test)
    add_test(NAME ${test_name} COMMAND ${CMAKE_BINARY_DIR}/test/unit/${exec} ${test_parameters})
    set_tests_properties(${test_name} PROPERTIES WILL_FAIL false)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "LD_PRELOAD=${CMAKE_BINARY_DIR}/ares/datasets/libdatasets.so")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=$ENV{HDF5_PLUGIN_PATH}")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "RUN_DIR=$ENV{RUN_DIR}")
endforeach ()

message(${CMAKE_CXX_FLAGS})
set(NREQS_LIST 100 1000 10000 100000 1000000)
set(NPROCS_LIST 1 2 4 8 16 32)
set(MODEL_FILE ${CMAKE_BINARY_DIR}/test_data.csv)
add_executable(unit_storage_cost_predictor storage_cost_predictor/test.cpp)
target_link_libraries(unit_storage_cost_predictor symbios_server_lib)
target_link_libraries(unit_storage_cost_predictor ${LIBS})
set_target_properties(unit_storage_cost_predictor PROPERTIES COMPILE_FLAGS "-O3 -ffast-math")
foreach(NREQS ${NREQS_LIST})
    foreach(NPROCS ${NPROCS_LIST})
        add_test(NAME sc_predictor_${NREQS}_${NPROCS} COMMAND
                mpirun -n ${NPROCS} ${CMAKE_BINARY_DIR}/test/unit/unit_storage_cost_predictor -model ${MODEL_FILE} -nreqs ${NREQS} -out ${CMAKE_BINARY_DIR}/scc_thrpt.csv)
    endforeach()
endforeach()


set(test_files iris_emu)
foreach (test_file ${test_files})
    set(exec unit_${test_file})
    add_executable(${exec}  ${test_file}/test.cpp ${test_file}/iris.cpp)
    add_dependencies(${exec} symbios)
    add_dependencies(${exec} symbios_server_lib)
    target_link_libraries(${exec} symbios_server_lib)
    target_include_directories(${exec} PRIVATE "${CMAKE_BINARY_DIR}/")
    target_link_libraries(${exec} ${IRIS_LIBS})
    target_link_libraries(${exec} symbios)
    #set_target_properties(${exec} PROPERTIES FOLDER test/unit)
    set(test_parameters )
    set(test_name ${test_file}_test)
    add_test(NAME ${test_name} COMMAND ${CMAKE_BINARY_DIR}/test/unit/${exec} ${test_parameters})
    set_tests_properties(${test_name} PROPERTIES WILL_FAIL false)
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "LD_PRELOAD=${CMAKE_BINARY_DIR}/ares/datasets/libdatasets.so")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "HDF5_PLUGIN_PATH=$ENV{HDF5_PLUGIN_PATH}")
    set_property(TEST ${test_name} APPEND PROPERTY ENVIRONMENT "RUN_DIR=$ENV{RUN_DIR}")
endforeach ()